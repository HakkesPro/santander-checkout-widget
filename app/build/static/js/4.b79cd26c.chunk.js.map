{"version":3,"sources":["components/WidgetContainer.tsx","components/Logo.tsx","components/Classic/Header.tsx","components/Classic/Body.tsx","components/Classic/Content.tsx","pages/Classic.tsx"],"names":["sectionStyles","theme","config","maxHeight","containerHeight","maxWidth","containerWidth","height","width","border","borderColor","margin","isIframed","padding","mode","Mode","MODERN","background","color","text","borderRadius","WidgetContainer","children","id","useAppSelector","context","style","Logo","logoUrl","logoHeight","src","createStyleTag","document","createElement","innerText","window","self","body","appendChild","Header","translations","dispatch","useAppDispatch","amountOptions","amountOptionsFixed","defaultValue","value","useEffect","paymentActions","setSelectedAmount","Number","Grid","Row","Column","verticalAlign","columns","textAlign","monthlyAmount","Dropdown","scrolling","options","onChange","e","className","Body","paymentDetails","months","selectedAmount","fixedTotalAmount","getFixedTotalAmount","toPascalCase","monthsAlias","effectiveInterestRateAlias","effectiveInterestRate","toString","replace","inTotal","cost","getFixedTotalCost","Content","padded","stretched","fontSize","footerFontSize","footer","Classic"],"mappings":"8IACA,kCAKMA,EAAgB,SAACC,EAAcC,GAAf,MAAmC,CACvDC,UAAWD,EAAOE,gBAClBC,SAAUH,EAAOI,eACjBC,OAAQ,QACRC,MAAO,QACPC,OAAQ,YACRC,YAAaT,EAAMQ,OACnBE,OAAQC,cAAc,OAAS,MAC/BC,QAASX,EAAOY,OAASC,IAAKC,OAAS,OAAS,QAChDC,WAAYhB,EAAMgB,WAClBC,MAAOjB,EAAMkB,KACbC,aAAcnB,EAAMmB,eAmBPC,IAXoB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACxCtB,EAAeuB,aAAe,qBAAGC,QAAsBxB,SACvDC,EAAiBsB,aAAe,qBAAGC,QAAsBvB,UAE/D,OACE,yBAASqB,GAAIA,EAAIG,MAAO1B,EAAcC,EAAOC,GAA7C,SACIoB,M,iCC9BR,4BAeeK,IAZC,WACd,IAAMC,EAAkBJ,aAAe,qBAAGC,QAAsBvB,OAAO0B,WACjEC,EAAqBL,aAAe,qBAAGC,QAAsBvB,OAAO2B,cAE1E,OACE,cAAC,IAAD,CACEH,MAAO,CAAEnB,OAAQsB,GACjBC,IAAKF,M,sHCiDLG,EAAiB,SAAC9B,GACtB,IAAMyB,EAAQM,SAASC,cAAc,SACrCP,EAAMQ,UAAN,wOAMwBjC,EAAMQ,OAN9B,mCAOqBR,EAAMmB,aAP3B,gBAUAe,OAAOC,KAAKJ,SAASK,KAAKC,YAAYZ,IAGzBa,EA5DU,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,aAAcvC,EAAyB,EAAzBA,MAClCwC,EAAwBC,cACxBC,EAAgBC,cAMhBC,EAAeF,EAAc,GAAGG,MAQtC,OANAC,qBAAU,WACRN,EAASO,IAAeC,kBAAkBC,OAAOL,OAChD,CAACJ,EAAUI,IAEdd,EAAe9B,GAGb,eAACkD,EAAA,EAAKC,IAAN,WAEE,cAACD,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAApB,SACE,cAAC2C,EAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,EAAA,EAAKC,IAAN,CAAUG,QAAS,EAAnB,UACE,cAACJ,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,8BAAKhB,EAAaiB,cAAlB,SAEF,cAACN,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,cAACE,EAAA,EAAD,CACEb,aAAcA,EACdc,WAAS,EACTC,QAASjB,EACTkB,SA1Be,SAACC,EAAD,GAA8C,IAAxBhB,EAAuB,EAAvBA,MACjDL,EAASO,IAAeC,kBAAkBC,OAAOJ,iBAgC/C,cAACK,EAAA,EAAKE,OAAN,CAAaU,UAAU,OAAOvD,MAAO,EAArC,SACE,cAACmB,EAAA,EAAD,UC8BOqC,EApEQ,SAAC,GAA2C,IAAzCxB,EAAwC,EAAxCA,aAActC,EAA0B,EAA1BA,OACtC,EAGyBsB,aAAe,qBAAGyC,kBAFzCC,EADF,EACEA,OACAC,EAFF,EAEEA,eAEIC,EAAmBC,YAAoBF,GAAkB,EAAGD,GAElE,OACE,qCACE,eAACf,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAApB,SACE,cAAC2C,EAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,EAAA,EAAKC,IAAN,CAAUG,QAAS,EAAnB,UACE,cAACJ,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,8BAAKc,YAAa9B,EAAa0B,QAA/B,SAEF,cAACf,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,8BAAKU,EAAL,IAAgB1B,EAAa+B,wBAMrC,cAACpB,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAApB,SACE,cAAC2C,EAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,EAAA,EAAKC,IAAN,CAAUG,QAAS,EAAnB,UACE,cAACJ,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAAGgD,UAAU,OAAjC,SACE,8BAAKhB,EAAagC,2BAAlB,SAEF,cAACrB,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAAGgD,UAAU,OAAjC,SACE,8BAAKtD,EAAOuE,sBAAsBC,WAAWC,QAAQ,IAAK,KAA1D,mBAOV,eAACxB,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAApB,SACE,cAAC2C,EAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,EAAA,EAAKC,IAAN,CAAUG,QAAS,EAAnB,UACE,cAACJ,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,8BAAKhB,EAAaoC,QAAlB,SAEF,cAACzB,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,4BAAKY,aAMb,cAACjB,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAApB,SACE,cAAC2C,EAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,EAAA,EAAKC,IAAN,CAAUG,QAAS,EAAnB,UACE,cAACJ,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAAGgD,UAAU,OAAjC,SACE,8BAAKhB,EAAaqC,KAAlB,SAEF,cAAC1B,EAAA,EAAKE,OAAN,CAAa7C,MAAO,EAAGgD,UAAU,OAAjC,SACE,4BAAKsB,gCC5BNC,EApCW,WACxB,IAAM7E,EAAiBsB,aAAe,qBAAGC,QAAsBvB,UACzDD,EAAeuB,aAAe,qBAAGC,QAAsBxB,SACvDuC,EAA6BhB,aAAe,qBAAGC,QAAsBe,gBAE3E,OACE,eAACW,EAAA,EAAD,CACE6B,QAAM,EACNtD,MAAO,CAAEnB,OAAQ,QACjBiD,UAAU,SACVD,QAAS,EACT0B,WAAS,EACT3B,cAAc,SANhB,UAQE,cAAC,EAAD,CACErD,MAAOA,EACPuC,aAAcA,IAGhB,cAAC,EAAD,CACEA,aAAcA,EACdtC,OAAQA,IAGV,cAACiD,EAAA,EAAKC,IAAN,CACEG,QAAS,EACTC,UAAU,OAFZ,SAIE,cAACL,EAAA,EAAKE,OAAN,CAAaG,UAAU,OAAvB,SACE,mBAAG9B,MAAO,CAAEwD,SAAUjF,EAAMkF,gBAA5B,SAAgD3C,EAAa4C,iBC5BxDC,UANI,kBACjB,cAAChE,EAAA,EAAD,CAAiBE,GAAG,oBAApB,SACE,cAAC,EAAD","file":"static/js/4.b79cd26c.chunk.js","sourcesContent":["import type { FC, ReactNode } from 'react';\nimport { useAppSelector } from 'redux/redux-hooks';\nimport type { Theme, Config } from 'types/global-types';\nimport { Mode } from 'types/global-types';\nimport { isIframed } from 'utils/helpers';\n\nconst sectionStyles = (theme: Theme, config: Config) => ({\n  maxHeight: config.containerHeight,\n  maxWidth: config.containerWidth,\n  height: '100vh',\n  width: '100vw',\n  border: '1px solid',\n  borderColor: theme.border,\n  margin: isIframed() ? '15px' : '3px',\n  padding: config.mode === Mode.MODERN ? '10px' : '5px 0',\n  background: theme.background,\n  color: theme.text,\n  borderRadius: theme.borderRadius,\n});\n\ninterface Props {\n  children: ReactNode,\n  id: string\n}\n\nconst WidgetContainer: FC<Props> = ({ children, id }) => {\n  const theme: Theme = useAppSelector(({ context }) => context.theme);\n  const config: Config = useAppSelector(({ context }) => context.config);\n\n  return (\n    <section id={id} style={sectionStyles(theme, config)}>\n      { children }\n    </section>\n  );\n};\n\nexport default WidgetContainer;\n","import type { FC } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { useAppSelector } from 'redux/redux-hooks';\n\nconst Logo:FC = () => {\n  const logoUrl: string = useAppSelector(({ context }) => context.config.logoUrl);\n  const logoHeight: string = useAppSelector(({ context }) => context.config.logoHeight);\n\n  return (\n    <Image\n      style={{ height: logoHeight }}\n      src={logoUrl}\n    />\n  );\n};\n\nexport default Logo;\n","import type { FC, SyntheticEvent } from 'react';\nimport { useEffect } from 'react';\nimport { Grid, Dropdown } from 'semantic-ui-react';\nimport Logo from '../Logo';\nimport type { Translations, Theme } from 'types/global-types';\nimport type { AppDispatch } from 'redux/store';\nimport { useAppDispatch } from 'redux/redux-hooks';\nimport { amountOptionsFixed } from 'utils/helpers';\nimport { paymentActions } from 'redux/actions';\n\ninterface Props {\n  translations: Translations,\n  theme: Theme\n}\n\nconst Header:FC<Props> = ({ translations, theme }): JSX.Element => {\n  const dispatch: AppDispatch = useAppDispatch();\n  const amountOptions = amountOptionsFixed();\n\n  const updateSelectedAmount = (e: SyntheticEvent, { value }: any): void => {\n    dispatch(paymentActions.setSelectedAmount(Number(value)));\n  };\n\n  const defaultValue = amountOptions[0].value;\n\n  useEffect(() => {\n    dispatch(paymentActions.setSelectedAmount(Number(defaultValue)));\n  }, [dispatch, defaultValue]);\n\n  createStyleTag(theme);\n\n  return (\n    <Grid.Row>\n\n      <Grid.Column width={9}>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Row columns={2}>\n            <Grid.Column textAlign=\"left\">\n              <p>{ translations.monthlyAmount }:</p>\n            </Grid.Column>\n            <Grid.Column textAlign=\"left\">\n              <Dropdown\n                defaultValue={defaultValue}\n                scrolling\n                options={amountOptions}\n                onChange={updateSelectedAmount}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Grid.Column>\n\n      <Grid.Column className=\"test\" width={7}>\n        <Logo />\n      </Grid.Column>\n\n    </Grid.Row>\n  );\n};\n\nconst createStyleTag = (theme: Theme) => {\n  const style = document.createElement('style');\n  style.innerText = `\n    #classic-container > div > div:nth-child(1) >\n    div.nine.wide.column > div > div > div.left.aligned.column > div {\n      background: #ffffff;\n      width: 85px;\n      padding: 1px 5px;\n      border: 1px solid ${theme.border};\n      border-radius: ${theme.borderRadius};\n    }\n  `;\n  window.self.document.body.appendChild(style);\n};\n\nexport default Header;\n","import type { FC } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { useAppSelector } from 'redux/redux-hooks';\nimport type { Translations, Config, PaymentDetailsState } from 'types/global-types';\nimport {\n  toPascalCase,\n  getFixedTotalAmount,\n  getFixedTotalCost,\n} from 'utils/helpers';\n\ninterface Props {\n  translations: Translations\n  config: Config\n}\n\nconst Body:FC<Props> = ({ translations, config }): JSX.Element => {\n  const {\n    months,\n    selectedAmount,\n  }: PaymentDetailsState = useAppSelector(({ paymentDetails }) => paymentDetails);\n  const fixedTotalAmount = getFixedTotalAmount(selectedAmount || 0, months);\n\n  return (\n    <>\n      <Grid.Row>\n        <Grid.Column width={9}>\n          <Grid verticalAlign=\"middle\">\n            <Grid.Row columns={2}>\n              <Grid.Column textAlign=\"left\">\n                <p>{ toPascalCase(translations.months) }:</p>\n              </Grid.Column>\n              <Grid.Column textAlign=\"left\">\n                <p>{ months } { translations.monthsAlias }</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Grid.Column>\n\n        <Grid.Column width={7}>\n          <Grid verticalAlign=\"middle\">\n            <Grid.Row columns={2}>\n              <Grid.Column width={8} textAlign=\"left\">\n                <p>{ translations.effectiveInterestRateAlias }:</p>\n              </Grid.Column>\n              <Grid.Column width={8} textAlign=\"left\">\n                <p>{ config.effectiveInterestRate.toString().replace('.', ',') }%</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={9}>\n          <Grid verticalAlign=\"middle\">\n            <Grid.Row columns={2}>\n              <Grid.Column textAlign=\"left\">\n                <p>{ translations.inTotal }:</p>\n              </Grid.Column>\n              <Grid.Column textAlign=\"left\">\n                <p>{ fixedTotalAmount }</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Grid.Column>\n\n        <Grid.Column width={7}>\n          <Grid verticalAlign=\"middle\">\n            <Grid.Row columns={9}>\n              <Grid.Column width={8} textAlign=\"left\">\n                <p>{ translations.cost }:</p>\n              </Grid.Column>\n              <Grid.Column width={8} textAlign=\"left\">\n                <p>{ getFixedTotalCost() }</p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Grid.Column>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport default Body;\n","import type { FC } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Header from './Header';\nimport Body from './Body';\nimport { useAppSelector } from 'redux/redux-hooks';\nimport type { Config, Theme, Translations } from 'types/global-types';\n\ninterface Props {}\n\nconst Content:FC<Props> = (): JSX.Element => {\n  const config: Config = useAppSelector(({ context }) => context.config);\n  const theme: Theme = useAppSelector(({ context }) => context.theme);\n  const translations: Translations = useAppSelector(({ context }) => context.translations);\n\n  return (\n    <Grid\n      padded\n      style={{ height: '100%' }}\n      textAlign=\"center\"\n      columns={2}\n      stretched\n      verticalAlign=\"middle\"\n    >\n      <Header\n        theme={theme}\n        translations={translations}\n      />\n\n      <Body\n        translations={translations}\n        config={config}\n      />\n\n      <Grid.Row\n        columns={1}\n        textAlign=\"left\"\n      >\n        <Grid.Column textAlign=\"left\">\n          <p style={{ fontSize: theme.footerFontSize }}>{ translations.footer }</p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default Content;\n","import type { FC } from 'react';\nimport WidgetContainer from 'components/WidgetContainer';\nimport Content from 'components/Classic/Content';\n\nconst Classic:FC = () => (\n  <WidgetContainer id=\"classic-container\">\n    <Content />\n  </WidgetContainer>\n);\n\nexport default Classic;\n"],"sourceRoot":""}